// <auto-generated />
using HotelBookingApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBookingApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220602113838_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelBookingApi.Models.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountryId = 1L,
                            Name = "Abu Dhabi"
                        },
                        new
                        {
                            Id = 2L,
                            CountryId = 1L,
                            Name = "Al Ain"
                        },
                        new
                        {
                            Id = 3L,
                            CountryId = 1L,
                            Name = "Al Khan"
                        },
                        new
                        {
                            Id = 4L,
                            CountryId = 1L,
                            Name = "Ar Ruways"
                        },
                        new
                        {
                            Id = 5L,
                            CountryId = 1L,
                            Name = "As Satwah"
                        },
                        new
                        {
                            Id = 6L,
                            CountryId = 1L,
                            Name = "Dayrah"
                        },
                        new
                        {
                            Id = 7L,
                            CountryId = 1L,
                            Name = "Dubai"
                        },
                        new
                        {
                            Id = 8L,
                            CountryId = 1L,
                            Name = "Fujairah"
                        },
                        new
                        {
                            Id = 9L,
                            CountryId = 1L,
                            Name = "Ras al-Khaimah"
                        },
                        new
                        {
                            Id = 10L,
                            CountryId = 1L,
                            Name = "Sharjah"
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "United Arab Emirates"
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Facility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Facilities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Wifi"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Parking"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Spa"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Gym"
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Hotel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("HotelBookingApi.Models.HotelFacility", b =>
                {
                    b.Property<long>("HotelId")
                        .HasColumnType("bigint");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.HasKey("HotelId", "FacilityId");

                    b.HasIndex("FacilityId");

                    b.ToTable("HotelFacilities");
                });

            modelBuilder.Entity("HotelBookingApi.Models.City", b =>
                {
                    b.HasOne("HotelBookingApi.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Hotel", b =>
                {
                    b.HasOne("HotelBookingApi.Models.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("HotelBookingApi.Models.HotelFacility", b =>
                {
                    b.HasOne("HotelBookingApi.Models.Facility", "Facility")
                        .WithMany("HotelFacilities")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingApi.Models.Hotel", "Hotel")
                        .WithMany("HotelFacilities")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelBookingApi.Models.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Facility", b =>
                {
                    b.Navigation("HotelFacilities");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Hotel", b =>
                {
                    b.Navigation("HotelFacilities");
                });
#pragma warning restore 612, 618
        }
    }
}
